<?xml version="1.0"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:cnx="http://cnx.rice.edu/cnxml" xmlns="http://www.w3.org/1999/xhtml" xmlns:tal="http://xml.zope.org/namespaces/tal" xmlns:metal="http://xml.zope.org/namespaces/metal" version="1.0">

  <!-- You should install the CNXML package and catalog so this can use a local copy-->
  <xsl:import href="http://cnx.rice.edu/technology/cnxml/stylesheet/cnxml_render.xsl"/>

  <xsl:template match="cnx:ins">
    <ins><xsl:apply-templates/></ins>
  </xsl:template>
  
  <xsl:template match="cnx:del">
    <del><xsl:apply-templates/></del>
  </xsl:template>
  
  <!-- Don't actually display gallery if there are no mpegs -->
  <xsl:param name="gallery" select="0"/>
  <xsl:variable name="xsl_gallery" select="$gallery and //cnx:media[@type='audio/mpeg']"/>
  
  <xsl:param name="stylesheet_path" select="'/stylesheets/plone'"/>
  
  <xsl:variable name="baseurl" select="/module/display/base/@href"/>
  <xsl:variable name="authoremailstring">
    <xsl:for-each select="/module/metadata/author">
      <xsl:value-of select="email"/>
      <xsl:if test="position()!=last()">,</xsl:if>
    </xsl:for-each>
  </xsl:variable>
  <xsl:variable name="objectId" select="/module/publishing/objectId/text()"/>
  <xsl:variable name="previous" select="/module/display/context/links/link[@rel='previous']"/>
  <xsl:variable name="next" select="/module/display/context/links/link[@rel='next']"/>
  <xsl:variable name="modlang" select="/module/metadata/language"/>
  
  
  <xsl:output omit-xml-declaration="yes" encoding="utf-8"/>
  
  <xsl:template match="/|title|name|abstract">
    <xsl:apply-templates/>
  </xsl:template>
  
  <xsl:template match="module">
    <xsl:if test="display/offline">
      <xsl:comment>
        WARNING: Do NOT edit this file. It was generated for display purposes only and will be
        ignored when imported.
        If you would like to edit this module, please use the index.cnxml file.
      </xsl:comment>
    </xsl:if>
    <html>
      
      <head>
	<xsl:if test="publishing/state[text()='public']">
	  <base href="{$baseurl}"/>
	</xsl:if>
	
	<title>
	  <xsl:choose>
	    <xsl:when test="display/context/title">
	      <xsl:value-of select="display/context/title"/>
	    </xsl:when>
	    <xsl:otherwise>
	      <xsl:value-of select="title"/>
	    </xsl:otherwise>
	  </xsl:choose>
	</title>

        <xsl:if test="display/offline">
        <link rel="stylesheet" type="text/css" href="stylesheets/offline.css"/>
        </xsl:if>

	<link rel="stylesheet" type="text/css" href="{$stylesheet_path}/ns4.css"/>
	<xsl:choose>
	  <xsl:when test="display/styles[not(@chooser='true')]">
	    <link type="text/css" href="{display/styles/style[@active='true']/@href}" media="screen" title="{display/styles/style[@active='true']/@id}" rel="stylesheet"/>
	  </xsl:when>
	  <xsl:otherwise>
	    <xsl:for-each select="display/styles/style">
	      <link type="text/css" href="{@href}" media="screen" title="{@id}">
		<xsl:attribute name="rel">
		  <xsl:choose>
		    <xsl:when test="@active='true'">stylesheet</xsl:when>
		    <xsl:otherwise>alternate stylesheet</xsl:otherwise>
		  </xsl:choose>
		</xsl:attribute>
	      </link>
	    </xsl:for-each>
	  </xsl:otherwise>
	</xsl:choose>
	<link rel="stylesheet" type="text/css" href="{$stylesheet_path}/print.css" media="print"/>
	<xsl:if test="$xsl_gallery">
	  <link rel="stylesheet" type="text/css" href="{$stylesheet_path}/gallery.css" media="screen"/>
	</xsl:if>

	<!-- IS THIS NECESSARY STILL? -->
	<xsl:comment> ****QML**** sets the feedback and hints to non-visible. </xsl:comment>	
	<style type="text/css">
	  .feedback {display:none}
	  .hint {display:none}
	</style>
	
	<script type="text/javascript" src="/js/exercise.js"><xsl:text> </xsl:text></script>
	<script type="text/javascript" src="/js/qml_1-0.js"><xsl:text> </xsl:text></script>
	
	<meta http-equiv="Content-Type" content="application/xhtml+xml; charset=utf-8"/>
	<xsl:variable name="version" select="publishing/version/text()"/>
	<link rel="source" title="Source" type="text/xml" href="/content/{$objectId}/{$version}/source"/>
	<link rel="module" title="Module" type="text/xml" href="/content/{$objectId}/latest/"/>
	
	<xsl:if test="$previous">
	  <link rel="previous" href="{$previous/@href}" title="{$previous/@title}"/>
	</xsl:if>
	<xsl:if test="$previous">
	  <link rel="next" href="{$next/@href}" title="{$next/@title}"/>
	</xsl:if>
	<xsl:if test="display/context/a">
	  <link rel="up" href="{display/context/a/@href}" title="{display/context/a/text()}"/>
	</xsl:if>
	<link rel="meta" type="application/rdf+xml" href="content_license"/>
	<xsl:for-each select="//link[contains(@rel,'annotea')]">
	  <link>
	    <xsl:copy-of select="@*"/>
	  </link>
	</xsl:for-each>
	
	<xsl:comment>[if IE]&gt;
	  &lt;object id="objIEAnnoteaActiveXCtrl" classid="clsid:3EC733C9-32C0-45FA-BAE4-EA62E96800AA"&gt;&lt;/object&gt;
	  &lt;script type="text/javascript" language="JavaScript" src="/js/ie-annotations.js"&gt;<xsl:text> </xsl:text>&lt;/script&gt;
	  &lt;![endif]</xsl:comment>
	
        <link rel="search" title="Search this site" href="{publishing/portal/@href}/content/search"/>
        <link rel="search" title="{publishing/portal/title}" href="{publishing/portal/@href}/opensearchdescription" type="application/opensearchdescription+xml"/>

      </head>
      
      <body onload="constructHintCounter()" id="cnx_module">

      <xsl:if test="display/offline">
        <div id="nostyles" style="color: red; border: medium red solid; padding:0.5em; margin:0.5em;">
          Oops! You're viewing this page without styles. This can happen if you're viewing this
          from directly inside a zip file. Please extract the contents of the zip file and view
          from there.
        </div>
      </xsl:if>

	<xsl:if test="$xsl_gallery">
	  <div id="cnx_whole_enchilada">
	    <xsl:call-template name="ingredients"/>
	  </div>
	</xsl:if>
	<xsl:if test="not($xsl_gallery)">
	  <xsl:call-template name="ingredients"/>
	</xsl:if>
	
	
	<!-- LISTENING GALLERY -->
	<xsl:if test="$xsl_gallery">
	  <div id="musical-examples">
	    <span class="name">Musical Examples</span>
	    <ol>
	      <xsl:for-each select="//cnx:media[@type='audio/mpeg']">
		<li>
		  <a class="musical-example" id="{@id}-link" href="javascript:toggleBar('{@id}')">
		    <xsl:call-template name="composer-title-comments"/>
		  </a>
		</li>
	      </xsl:for-each>
	    </ol>
	  </div>
	  
	  <!-- MUSIC APPLET TITLE BARS -->
	  <xsl:for-each select="//cnx:media[@type='audio/mpeg']">
	    <div id="{@id}">
	      <xsl:attribute name="class">
		<xsl:choose>
		  <xsl:when test="cnx:param[@name='interactive']">title-bar interactive</xsl:when>
		  <xsl:otherwise>title-bar</xsl:otherwise>
		</xsl:choose>
	      </xsl:attribute>
	      <div class="titles">
		<div class="title shadow">                  
		  <xsl:call-template name="composer-title-comments"/>
		  <xsl:call-template name="tt"/>
		</div>
		<div class="title top">
		  <xsl:call-template name="composer-title-comments"/>
		  <xsl:call-template name="tt"/>
		</div>
		<a class="close" href="javascript:toggleBar('{@id}');">x</a>
	      </div>
	      <div class="player">
		<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,0,0" width="600" align="center">
		  <xsl:choose>
		    <xsl:when test="cnx:param[@name='interactive']">
		      <xsl:attribute name="height">175</xsl:attribute>
		      <param name="movie" value="http://music.cnx.rice.edu/flash/cnxplayer_int.swf?song={@src}&amp;songname={cnx:param[@name='interactive']/@value}"/>
		    </xsl:when>
		    <xsl:when test="cnx:param[@name='timed-text']">
		      <xsl:attribute name="height">85</xsl:attribute>
		      <param name="movie" value="http://music.cnx.rice.edu/flash/cnxplayer_tt.swf?song={@src}&amp;songname={cnx:param[@name='timed-text']/@value}"/>
		    </xsl:when>
		    <xsl:otherwise>
		      <xsl:attribute name="height">60</xsl:attribute>
		      <param name="movie" value="http://music.cnx.rice.edu/flash/cnxplayer.swf?song={@src}"/>
		    </xsl:otherwise>
		  </xsl:choose>
		  
		  <param name="quality" value="high"/>
		  <embed width="600" align="center" quality="high" bgcolor="4A79A5" type="application/x-shockwave-flash" pluginspage="http://www.macromedia.com/go/getflashplayer">
		    <xsl:choose>
		      <xsl:when test="cnx:param[@name='interactive']">
			<xsl:attribute name="height">175</xsl:attribute>
			<xsl:attribute name="src">http://music.cnx.rice.edu/flash/cnxplayer_int.swf?song=<xsl:value-of select="@src"/>&amp;songname=<xsl:value-of select="cnx:param[@name='interactive']/@value"/></xsl:attribute>
		      </xsl:when>
		      <xsl:when test="cnx:param[@name='timed-text']">
			<xsl:attribute name="height">85</xsl:attribute>
			<xsl:attribute name="src">http://music.cnx.rice.edu/flash/cnxplayer_tt.swf?song=<xsl:value-of select="@src"/>&amp;songname=<xsl:value-of select="cnx:param[@name='timed-text']/@value"/></xsl:attribute>
		      </xsl:when>
		      <xsl:otherwise>
			<xsl:attribute name="height">60</xsl:attribute>
			<xsl:attribute name="src">http://music.cnx.rice.edu/flash/cnxplayer.swf?song=<xsl:value-of select="@src"/></xsl:attribute>
		      </xsl:otherwise>
		    </xsl:choose>
		    <p>You need to install <a href="http://www.macromedia.com/shockwave/download/download.cgi?P1_Prod_Version=ShockwaveFlash&amp;application/x-shockwave-flash"> Macromedia Flash</a> to display this.</p>
		  </embed>
		  
		  <param name="bgcolor" value="4A79A5"/>
		  <xsl:if test="cnx:param[@name='total-time']">
		    <xsl:variable name="total-time" select="cnx:param[@name='total-time']/@value"/>
		    <param name="total-time" value="{$total-time}"/>
		  </xsl:if>
		  <param name="textcolor" value="ffffff"/>
		  <xsl:if test="cnx:param[@name='timed-text']">
		    <xsl:variable name="timed-text-file" select="cnx:param[@name='timed-text']/@value"/>
		    <param name="timed-text" value="{$timed-text-file}"/>
		  </xsl:if>
		  <xsl:if test="cnx:param[@name='interactive']">
		    <param name="interactive" value="{cnx:param[@name='interactive']/@value}"/>
		  </xsl:if>
		  
		  <!--<p>You need to install Macromedia Flash to display this.</p>-->
		  
		</object>
	      </div>
	      <div class="performance">
		<xsl:if test="cnx:param[@name='label-number' and normalize-space(@value)!='']">
		  <xsl:value-of select="cnx:param[@name='label-number']/@value"/>
		</xsl:if>
		<xsl:if test="cnx:param[@name='label-number' and normalize-space(@value)!=''] and cnx:param[@name='performer' and normalize-space(@value)!='']">
		  <xsl:text> </xsl:text>&#8212;<xsl:text> </xsl:text>
		</xsl:if>
		<xsl:if test="cnx:param[@name='performer']">
		  <xsl:value-of select="cnx:param[@name='performer']/@value"/>
		</xsl:if>
	      </div>
	    </div>
	  </xsl:for-each>
	</xsl:if>

        <!-- Google Analytics tracking. Only for CNX. This will need to edited out for Rhaptos installs. -->
        <script src="http://www.google-analytics.com/ga.js" type="text/javascript"><xsl:text> </xsl:text></script>
        <script type="text/javascript">
          try {
            var benchmarkTracker = _gat._getTracker("UA-7903479-1");
            benchmarkTracker._setDomainName('cnx.org');
            benchmarkTracker._trackPageview();
            var overallTracker = _gat._getTracker("UA-5033010-1");
            overallTracker._setDomainName('cnx.org');
            overallTracker._trackPageview();
          } catch(err) {}
        </script>
	
      </body>
      
      <xsl:if test="$xsl_gallery">
	<script type="text/javascript" src="/js/music.js"><xsl:text> </xsl:text></script>
      </xsl:if>
      
    </html>
    
  </xsl:template>
  

  <xsl:param name="courselinks" select="/module/display/context/links/link[@rel='example' or @rel='supplemental' or @rel='prerequisite']"/>
  <xsl:param name="authorlinks" select="/module/related/links/link[@rel='example' or @rel='supplemental' or @rel='prerequisite']"/>
  
  <xsl:key name="courselinkstype" match="/module/display/context/links/link[@rel='example' or @rel='supplemental' or @rel='prerequisite']" use="@rel"/>
  <xsl:key name="authorlinkstype" match="/module/related/links/link[@rel='example' or @rel='supplemental' or @rel='prerequisite']" use="@rel"/>
  <xsl:key name="optionalroles" match="module/metadata/optionalrole" use="@name"/>
  

  <xsl:template name="ingredients">
    
    
    <div id="cnx_header">

      <xsl:if test="display/context">
	<xsl:attribute name="class">cnx_in_course</xsl:attribute>
      </xsl:if>
      <h1>
	<!-- for changing module title in course context -->
	<xsl:choose>
	  <xsl:when test="display/context/title">
	    <xsl:value-of select="display/context/title"/>
	  </xsl:when>
	  <xsl:otherwise>
	    <xsl:apply-templates select="title"/>
	  </xsl:otherwise>
	</xsl:choose>
      </h1>
      <p id="cnx_authorship"><!-- By: --><xsl:text>By: </xsl:text>
        <xsl:text> </xsl:text>
	<xsl:for-each select="metadata/author">
	  <a href="{publishing/portal/@href}/member_profile/{@id}">
	    <xsl:value-of select="name"/>
	  </a>
	  <xsl:if test="position()!=last()"><!-- , -->
            <xsl:text>, </xsl:text>
          </xsl:if>
          <xsl:text> </xsl:text>
	</xsl:for-each>
        
        <xsl:for-each select="metadata/optionalrole[generate-id() = generate-id(key('optionalroles',@name)[1])]">
          <xsl:call-template name="optionalroles">
            <xsl:with-param name="rolename"><xsl:value-of select="@name"/></xsl:with-param>
          </xsl:call-template>
        </xsl:for-each>

	<xsl:if test="metadata/parent">
	  <span id="cnx_parent">
            <!-- Based on: -->
            <xsl:text>Based on:</xsl:text>
            <xsl:text> </xsl:text>
	    <a href="{metadata/parent/@href}"><xsl:apply-templates select="metadata/parent/title"/></a>
            <xsl:text> </xsl:text>
	    <!-- by --> 
            <xsl:text>by</xsl:text>
            <xsl:text> </xsl:text>
	    <xsl:for-each select="metadata/parent/author">
	      <a href="{publishing/portal/@href}/member_profile/{@id}">
		<xsl:value-of select="name"/>
	      </a>
	      <xsl:if test="position()!=last()"><!-- , -->
                <xsl:text>, </xsl:text>
              </xsl:if>
	    </xsl:for-each>
            <xsl:text> </xsl:text>
	    
	  </span>
	</xsl:if>
      </p>
      
      <xsl:if test="$previous or $next">
	<div class="cnx_previous_next">
	  <xsl:if test="$previous">
	    <a href="{$previous/@href}" class="cnx_previous">&lt;&lt; 
              <!-- Prev --> 
              <xsl:text>Prev</xsl:text>
            </a> | 
	  </xsl:if>
	  <a href="{display/context/a/@href}" class="cnx_toc">
            <!--Table of Contents-->
              <xsl:text>Table of Contents</xsl:text>
          </a>
	  <xsl:if test="$next">
	    | <a href="{$next/@href}" class="cnx_next"><!--Next -->
              <xsl:text>Next</xsl:text>
              &gt;&gt;</a>
	  </xsl:if>
	</div>
      </xsl:if>
      
      <xsl:if test="metadata/abstract">
	<p id="cnx_abstract">
	  <span class="cnx_before"><!-- Summary: -->
            <xsl:text>Summary:</xsl:text>
            <xsl:text> </xsl:text>
          </span>
	  <xsl:apply-templates select="metadata/abstract"/>
	</p>
      </xsl:if>
      
      <xsl:if test="not(publishing/version/@latest='true') and not(display/context)">
	<p class="cnx_warning">
	  <span class="cnx_before">
            <!-- Note: -->
            <xsl:text>Note:</xsl:text></span> 
            <xsl:text> </xsl:text>
          <!-- You are viewing an old version of this document. -->
          <xsl:text>You are viewing an old version of this document.</xsl:text>   
          <xsl:text> </xsl:text>      
	  <a href="{publishing/portal/@href}/content/{$objectId}/latest/">
            <!-- The latest version is available here. -->
            <xsl:text>The latest version is available here.</xsl:text></a>
	</p>
      </xsl:if>

      <xsl:if test="not(display/offline)">
       <xsl:if test="publishing/state[text()!='public']">
	<p class="cnx_warning">
            <span class="cnx_before">
            <!-- Note -->
            <xsl:text>Note:</xsl:text>:</span> 
            <!--This is a preview of how your module will appear when published -->
            <xsl:text>This is a preview of how your module will appear when published</xsl:text>
            <xsl:if test="metadata[contains(@pending,'roles')]">
              <!-- , assuming that all -->
            <xsl:text>, assuming that all</xsl:text>
              <xsl:text> </xsl:text>
              <a href="content_roles">
                <!-- currently pending role requests -->
            <xsl:text>currently pending role requests</xsl:text>
              </a>
              <xsl:text> </xsl:text>
              <!-- are accepted -->
            <xsl:text>are accepted</xsl:text>
            </xsl:if>
            <!-- . -->
            <xsl:text>.</xsl:text>
            <xsl:text> </xsl:text>
            <!-- You must return to the editing interface to --> 
            <xsl:text>You must return to the editing interface to</xsl:text>
            <xsl:text> </xsl:text>
            <a href="module_text">
              <!-- edit -->
            <xsl:text>edit</xsl:text>
            </a> 
            <xsl:text> </xsl:text>
            <!-- or --> 
            <xsl:text>or</xsl:text>
            <xsl:text> </xsl:text>
            <a href="module_publish">
              <!-- publish -->
            <xsl:text>publish</xsl:text>
            </a> 
            <xsl:text> </xsl:text>
            <!-- your changes. --> 
            <xsl:text>your changes.</xsl:text> 
	  <xsl:if test="publishing/state[text()!='created']">
            <xsl:text> </xsl:text>
	    <!-- You may view the -->
            <xsl:text>You may view the</xsl:text> 
            <xsl:text> </xsl:text>
              <a href="{publishing/portal/@href}/content/{$objectId}/latest/">
                <!-- latest published version -->
            <xsl:text>latest published version</xsl:text>
              </a> 
              <xsl:text> </xsl:text>
              <!-- here and a -->
            <xsl:text>here and a</xsl:text>
            <xsl:text> </xsl:text>
              <a href="diff">
                <!-- list of changes -->
            <xsl:text>list of changes</xsl:text>
              </a>
            <xsl:text> </xsl:text>
	    <!-- here. -->
            <xsl:text>here.</xsl:text>
	  </xsl:if>
	</p>
       </xsl:if>
      </xsl:if>
      
    </div>
    
    <xsl:apply-templates select="cnx:document"/>
    
    <xsl:if test="$previous or $next">
      <div class="cnx_previous_next cnx_bottom">
	<a>
	  <xsl:attribute name="class">cnx_previous cnxn<xsl:if test="not($previous)"> cnx_extra</xsl:if></xsl:attribute>
	  <xsl:choose>
	    <xsl:when test="$previous">
	      <xsl:attribute name="href">
		<xsl:value-of select="$previous/@href"/>
	      </xsl:attribute>
	      &lt;&lt; <xsl:value-of select="$previous/@title"/>
	    </xsl:when>
	    <xsl:otherwise>&#160;</xsl:otherwise>
	  </xsl:choose>
	</a>
	<a href="{display/context/a/@href}" class="cnx_toc cnxn"><xsl:value-of select="display/context/a"/></a>
	<a>
	  <xsl:attribute name="class">cnx_next cnxn<xsl:if test="not($next)"> cnx_extra</xsl:if></xsl:attribute>
	  <xsl:choose>
	    <xsl:when test="$next">
	      <xsl:attribute name="href">
		<xsl:value-of select="$next/@href"/>
	      </xsl:attribute>
	      <xsl:value-of select="$next/@title"/> &gt;&gt;
	    </xsl:when>
	    <xsl:otherwise>&#160;</xsl:otherwise>
	  </xsl:choose>
	</a>
      </div>
    </xsl:if>
    
    <xsl:if test="not(display/offline)">
      <div id="cnx_discussion">
        <p>
          <!--Comments, questions, feedback, criticisms?-->
            <xsl:text>Comments, questions, feedback, criticisms?</xsl:text>
        </p>
        <xsl:if test="discussion">
          <h4><!--Discussion forum-->
            <xsl:text>Discussion forum</xsl:text>
          </h4>
          <ul>
            <li class="cnx_extra">
              <a href="{discussion/@href}">
                <!--Join the discussion &#187; -->
                <xsl:text>Join the discussion &#187;</xsl:text>
              </a>
            </li>
          </ul>
        </xsl:if>
        <h4><!--Send feedback-->
          <xsl:text>Send feedback</xsl:text>

        </h4>
        <ul>
          <li>
            <a href="mailto:{$authoremailstring}?cc={publishing/portal/email}&amp;subject=Feedback on {$baseurl}">
              <xsl:if test="count(metadata/author) &gt; 1"><!-- E-mail the authors -->
                <xsl:text>E-mail the authors</xsl:text>
              </xsl:if>
              <xsl:if test="count(metadata/author) = 1"><!-- E-mail the author -->
                <xsl:text>E-mail the author</xsl:text>
              </xsl:if>
            </a>
          </li>
          <li>
            <a href="mailto:{publishing/portal/email}?subject=Feedback on {$baseurl}">
              <!-- E-mail -->
              <xsl:text>E-mail </xsl:text>
              <xsl:value-of select="publishing/portal/title"/></a>
          </li>
        </ul>
      </div>
    </xsl:if>
    
    
    
    
    
    <div id="cnx_sidebar">
      
      <xsl:if test="metadata/endorsements">
	<div class="cnx_division" id="cnx_endorsements_expanded">
	  <h3><!-- Endorsements -->
            <xsl:text/>
          </h3>
          <ul>
	    <xsl:for-each select="metadata/endorsements/endorsement">
              <li>
	        <a href="/endorsements/{./@dacct}">  <!-- {./@href} -->
                                <!-- {publishing/portal/@href} seems not to work, but we want it here -->
	         <xsl:value-of select="./@name"/>
	        </a>
                <!--<p><xsl:value-of select="." /></p>-->
	        <!--(<a href="endorsementsBy?dacct={./@dacct}">more...</a>)-->
              </li>
	    </xsl:for-each>
          </ul>
	</div>
      </xsl:if>

      <xsl:if test=" related/similar or related/courses or (related/links and not($courselinks)) or $courselinks">
	
	<div class="cnx_division">
	  <h3><!-- Related material -->
            <xsl:text>Related material</xsl:text>
          </h3>
	  
	  <xsl:choose>
	    <xsl:when test="$courselinks">
	      <!-- This gets each type of appropriate link available only once -->
	      <xsl:for-each select="$courselinks[generate-id() = generate-id(key('courselinkstype',@rel)[1])]">
		<xsl:sort select="@rel"/>
		<xsl:call-template name="links">
		  <xsl:with-param name="linktype"><xsl:value-of select="@rel"/></xsl:with-param>
		</xsl:call-template>
	      </xsl:for-each>
	    </xsl:when>
	    <xsl:when test="$authorlinks and not(display/context and not($courselinks))">
	      <!-- This gets each appropriate type of link available only once -->
	      <xsl:for-each select="$authorlinks[generate-id() = generate-id(key('authorlinkstype',@rel)[1])]">
		<xsl:sort select="@rel"/>
		<xsl:call-template name="links">
		  <xsl:with-param name="linktype"><xsl:value-of select="@rel"/></xsl:with-param>
		</xsl:call-template>
	      </xsl:for-each>
	    </xsl:when>
	  </xsl:choose>
	  
	  <xsl:if test="related/similar/*">
	    <h4><!-- Similar content -->
              <xsl:text>Similar content</xsl:text>
            </h4>
	    <ul>
	      <xsl:for-each select="related/similar/a">
		<li>
		  <a href="{@href}">
		    <xsl:apply-templates/>
		  </a>
		</li>
	      </xsl:for-each>
	      <xsl:if test="related/similar/@more='true'">
		<li class="cnx_extra">
		  <a href="/content/similarity?objectId={$objectId}">
                    <xsl:attribute name="title"><!-- More links to similar content -->
                      <xsl:text>More links to similar content</xsl:text>
                    </xsl:attribute>
                    <!-- More -->
                    <xsl:text>More</xsl:text>&#160;&#187;
                  </a>
		</li>
	      </xsl:if>
	    </ul>
	  </xsl:if>
	  
	  <xsl:if test="related/courses/*">
	    <h4><!-- Courses using this content -->
              <xsl:text>Collections using this content</xsl:text>
            </h4>
	    <ul>
	      <xsl:for-each select="related/courses/a">
		<li>
		  <a href="{@href}">
		    <xsl:apply-templates/>
		  </a>
		</li>
	      </xsl:for-each>
	      <xsl:if test="related/courses/@more='true'">
		<li class="cnx_extra">
		  <a href="/content/search?returntypes:list=courses&amp;words={$objectId}">
                    <xsl:attribute name="title"><!-- More courses using this content -->
                      <xsl:text>More collections using this content</xsl:text>
                    </xsl:attribute>
                    <!-- More -->
                    <xsl:text>More</xsl:text>&#160;&#187;
                  </a>
		</li>
	      </xsl:if>
	    </ul>
	  </xsl:if>
	  
	</div>
      </xsl:if>
      

<xsl:if test="0">
      <xsl:if test="display/styles[@chooser='true']">
	<div class="cnx_division" id="cnx_style_chooser">
	  <h3><!-- Personalize -->
            <xsl:text>Personalize</xsl:text>
          </h3>
	  <h4><!-- Choose a style -->
            <xsl:text>Choose a style</xsl:text>
          </h4>
	  <ul>
	    <xsl:for-each select="display/styles/style">
	      <li class="{@id}">
		<a href="javascript:chooseStyle('{@id}')">
                  <xsl:call-template name="gentext">
                    <xsl:with-param name="key" select="."/>
                    <xsl:with-param name="lang" select="$modlang"/>
                  </xsl:call-template>
                </a>
	      </li>
	    </xsl:for-each>
	  </ul>
	</div>
      </xsl:if>
</xsl:if>
      
      <xsl:if test="publishing/state[text()='public']">
	<div class="cnx_division" id="cnx_eip_link">
	  <h3><!-- Content Actions (was Edit-In-Place) -->
            <xsl:text>Content Actions</xsl:text>
          </h3>
	  <ul>
            <li style="background-image: url(http://images.del.icio.us/static/img/delicious.small.gif);                        padding-left: 15px; position: relative; left: -3px; background-repeat: no-repeat;">
              <!-- Save to del.icio.us -->
              <a href="http://del.icio.us/post" onclick="window.open('http://del.icio.us/post?v=4&amp;noui&amp;jump=close&amp;url='+encodeURIComponent(location.href)+'&amp;title='+encodeURIComponent(document.title), 'delicious','toolbar=no,width=700,height=400'); return false;">
                <xsl:text>Save to del.icio.us</xsl:text>
              </a>
              <br/><!-- (what's this?) -->
              <a href="/help/bookmarking">
                <xsl:text/>
              </a>
            </li>
	  </ul>
	</div>
      </xsl:if>
      
    </div>
    
    <xsl:if test="not(display/offline)">
      <xsl:apply-templates select="display/print"/>
    </xsl:if>
    
    
    <div id="cnx_footer">
      <a id="cnx_license_logo" href="{metadata/license/@href}">
	<img alt="Creative Commons License" src="http://creativecommons.org/images/public/somerights20.gif"/> 
      </a>
      <xsl:if test="not(display/offline)">
        <p id="cnx_metadata_links">
          <a href="content_info_old"><!-- More about this content -->
            <xsl:text>More about this content</xsl:text>
          </a>
          <span> | </span>
          <a href="content_info_old#cnx_cite_header"><!-- Cite this content -->
            <xsl:text>Cite this content</xsl:text>
          </a>
          <span> | </span>
          <a href="content_info_old#cnx_history_header"><!-- Version history -->
            <xsl:text>Version history</xsl:text>
          </a>
        </p>
      </xsl:if>

      <p id="cnx_license">
	<!-- This work is licensed by -->
        <xsl:text>This work is licensed by</xsl:text>
        <xsl:text> </xsl:text>

        <!-- we have to condition the whole block because the condition doesn't work inside the foreach -->
        <xsl:if test="not(display/offline)">
          <xsl:for-each select="metadata/licensor">
            <xsl:if test="position()=last() and count(../licensor) &gt; 1"><!-- and -->
              <xsl:text>and</xsl:text>
              <xsl:text> </xsl:text>
            </xsl:if>
            <a href="{publishing/portal/@href}/member_profile/{@id}">
              <xsl:apply-templates select="name"/>
            </a>
            <xsl:if test="position()!=last() and count(../licensor) &gt; 2"><!-- , -->
              <xsl:text>, </xsl:text>
            </xsl:if>
            <xsl:text> </xsl:text>
          </xsl:for-each>
        </xsl:if>
        <xsl:if test="display/offline">
          <xsl:for-each select="metadata/licensor">
            <xsl:if test="position()=last() and count(../licensor) &gt; 1"><!-- and -->
              <xsl:text>and</xsl:text>
              <xsl:text> </xsl:text>
            </xsl:if>
              <xsl:apply-templates select="name"/>
            <xsl:if test="position()!=last() and count(../licensor) &gt; 2"><!-- , -->
              <xsl:text>, </xsl:text>
            </xsl:if>
            <xsl:text> </xsl:text>
          </xsl:for-each>
        </xsl:if>

	<!-- under a -->
        <xsl:text>under a</xsl:text>
        <xsl:text> </xsl:text>
	<a rel="license" href="{metadata/license/@href}">
          <!-- Creative Commons License -->
          <xsl:text>Creative Commons License</xsl:text>
        </a>
        <!-- , and is an -->                  
        <xsl:text>, and is an</xsl:text>
        <xsl:text> </xsl:text>
        <a xmlns:dct="http://purl.org/dc/terms/"
           href="http://opened.creativecommons.org/definition"
           rel="dct:conformsTo">
          <!-- Open Educational Resource -->
          <xsl:text>Open Educational Resource</xsl:text>
        </a>
        <!-- .  -->
        <xsl:text>. </xsl:text>
      </p>
      <p id="cnx_updated"><!-- Last edited by -->
        <xsl:text>Last edited by</xsl:text>
        <xsl:text> </xsl:text>
        <xsl:if test="not(display/offline)">
	  <xsl:choose>
	    <xsl:when test="publishing/submitter/@id">
	      <a href="{publishing/portal/@href}/member_profile/{publishing/submitter/@id}">
		<xsl:value-of select="publishing/submitter"/>
	      </a>
	    </xsl:when>
	    <xsl:otherwise>
	      <xsl:value-of select="publishing/submitter"/>
	    </xsl:otherwise>
	  </xsl:choose>
          <xsl:text> </xsl:text>
        </xsl:if>
        <xsl:if test="display/offline">
          <xsl:value-of select="publishing/submitter"/>
          <xsl:text> </xsl:text>
        </xsl:if>
        <!-- on --> 
        <xsl:text>on</xsl:text>
        <xsl:text> </xsl:text>
        <xsl:value-of select="publishing/revised"/>
        <!-- . -->
        <xsl:text>. </xsl:text>
      </p>
    </div>
    
    <div id="cnx_global">
      <div id="cnx_logo">
        <a title="{publishing/portal/description}">
          <xsl:if test="not(display/offline)">
            <xsl:attribute name="href">/</xsl:attribute>
          </xsl:if>
          <span><xsl:value-of select="publishing/portal/description"/></span>
        </a>
      </div>
      <xsl:if test="not(display/offline)">
        <form id="cnx_search" name="searchform" action="/content/search">
          <input type="text" tabindex="1" class="cnx_text" name="words"/>
          <input type="submit" tabindex="2" class="cnx_button">
	    <xsl:attribute name="value">
              <!-- Search -->
              <xsl:text>Search</xsl:text>
	      <xsl:if test="display/customheader">
		<xsl:text> </xsl:text>
		<xsl:value-of select="publishing/portal/title"/>
	      </xsl:if>
	    </xsl:attribute>
	  </input>
        </form>
        <div id="cnx_global_links">
          <a href="/">
	    <xsl:if test="display/customheader">
	      <xsl:value-of select="publishing/portal/title"/>
	      <xsl:text> </xsl:text>
	    </xsl:if>
            <!-- Home -->
            <xsl:text>Home</xsl:text>
	  </a>
	  | <a href="/aboutus/"><!-- About us -->
            <xsl:text>About us</xsl:text>
          </a> 
	  | <a href="/content/"><!-- Browse all content -->
            <xsl:text>Browse all content</xsl:text>
          </a> 
	  | <a href="/help/"><!-- Help -->
            <xsl:text>Help</xsl:text>
          </a>
        </div>
      </xsl:if>
    </div>

    <xsl:if test="display/customheader">
      <div id="cnx_custom_header_logo">
	<xsl:copy-of select="display/customheader/*"/>
      </div>
    </xsl:if>

  </xsl:template>
  
  
  
  <!-- MP3 (Gallery style) -->
  <xsl:template match="cnx:media[@type='audio/mpeg']"> 
    <xsl:choose>
      <xsl:when test="$xsl_gallery">
	<div class="example musical">
	  <span class="example-before"><!-- Musical Example -->
            <xsl:text>Musical Example</xsl:text>:
          </span>
	  <a class="link" href="javascript:toggleBar('{@id}')">
	    <xsl:call-template name="composer-title-comments"/>
	  </a>
	</div>
      </xsl:when>
      <xsl:otherwise><xsl:apply-imports/></xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  
  <xsl:template name="tt">
    <xsl:if test="cnx:param[@name='total-time' and normalize-space(@value)!='']">
      <xsl:variable name="tt-number" select="number(cnx:param[@name='total-time']/@value)"/>
      <xsl:variable name="minutes" select="floor(format-number($tt-number div 60,'#.####'))"/>
      <xsl:variable name="seconds" select="format-number(($tt-number div 60 - $minutes) * 60,'00')"/>
      <i><xsl:text> (</xsl:text><xsl:value-of select="$minutes"/><xsl:text>:</xsl:text><xsl:value-of select="$seconds"/><xsl:text>) </xsl:text></i>
    </xsl:if>
  </xsl:template>
  
  <xsl:template name="optionalroles">
    <xsl:param name="rolename"/>
    <xsl:if test="$rolename!='Editor'">
      <div>
        <xsl:value-of select="@displaybyline"/>
        <xsl:text> </xsl:text>
        <xsl:for-each select="../optionalrole[@name=$rolename]">
          <a href="{publishing/portal/@href}/member_profile/{@id}">
            <xsl:value-of select="name"/>
          </a>
          <xsl:if test="position()!=last()">, </xsl:if>
        </xsl:for-each>
      </div>
    </xsl:if>
  </xsl:template>

  <xsl:template name="links">
    <xsl:param name="linktype"/>
    <h4>
      <!-- Get the type of link, capitalize the first letter, then add " links" to it -->
      <xsl:variable name="lower" select="'abcdefghijklmnopqrstuvwxyz'"/>
      <xsl:variable name="upper" select="'ABCDEFGHIJKLMNOPQRSTUVWXYZ'"/>
      <xsl:call-template name="gentext">
        <xsl:with-param name="key" select="concat(translate(substring($linktype,1,1),$lower,$upper),substring($linktype,2),' links')"/>
        <xsl:with-param name="lang" select="$modlang"/>
      </xsl:call-template>
      
    </h4>
    <ul class="links">
      <xsl:for-each select="../link[@rel=$linktype]">
	<xsl:sort select="@strength" data-type="number" order="descending"/>
	<li class="strength{@strength}">
	  <span>[<xsl:value-of select="@strength"/>]</span>
	  <a href="{@href}">
	    <xsl:attribute name="title">
	      <xsl:choose>
		<xsl:when test="@strength='3'"><!-- Strongly related link -->
                  <xsl:text>Strongly related link</xsl:text>
                </xsl:when>
		<xsl:when test="@strength='2'"><!-- Related link -->
                  <xsl:text>Related link</xsl:text>
                </xsl:when>
		<xsl:when test="@strength='1'"><!-- Weakly related link -->
                  <xsl:text>Link</xsl:text>
                </xsl:when>
	      </xsl:choose>
	    </xsl:attribute>
	    <xsl:value-of select="@title"/>
	  </a>
	</li>
      </xsl:for-each>
    </ul>
  </xsl:template>
  
  <xsl:template match="print">
    <div id="cnx_print">
      <a href="{@href}">
        <xsl:attribute name="title"><!-- Link to printer-friendly PDF format -->
          <xsl:text>Link to printer-friendly PDF format</xsl:text>
        </xsl:attribute>
        <span><!-- Print (PDF) -->
          <xsl:text>Print (PDF)</xsl:text>
        </span>
      </a>
    </div>
  </xsl:template>
  
</xsl:stylesheet>
